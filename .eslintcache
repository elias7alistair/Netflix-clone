[{"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\index.js":"1","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\App.js":"2","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\reportWebVitals.js":"3","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Navbar.js":"4","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Row.js":"5","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Request.js":"6","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Banner.js":"7","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Footer.js":"8","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\axios.js":"9","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\utils.js":"10","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\Loader\\Loader.js":"11","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\LoaderQuotes\\LoaderQoutes.js":"12","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\Loader\\SecondaryLoader.js":"13","H:\\ent\\src\\index.js":"14","H:\\ent\\src\\App.js":"15","H:\\ent\\src\\reportWebVitals.js":"16","H:\\ent\\src\\Navbar.js":"17","H:\\ent\\src\\Row.js":"18","H:\\ent\\src\\Banner.js":"19","H:\\ent\\src\\Request.js":"20","H:\\ent\\src\\Footer.js":"21","H:\\ent\\src\\components\\LoaderQuotes\\LoaderQoutes.js":"22","H:\\ent\\src\\components\\Loader\\Loader.js":"23","H:\\ent\\src\\components\\Loader\\SecondaryLoader.js":"24","H:\\ent\\src\\axios.js":"25","H:\\ent\\src\\utils.js":"26"},{"size":517,"mtime":1660889955741,"results":"27","hashOfConfig":"28"},{"size":2242,"mtime":1665994260623,"results":"29","hashOfConfig":"28"},{"size":375,"mtime":1660889955742,"results":"30","hashOfConfig":"28"},{"size":878,"mtime":1660890812897,"results":"31","hashOfConfig":"28"},{"size":3375,"mtime":1665994195674,"results":"32","hashOfConfig":"28"},{"size":846,"mtime":1665910509478,"results":"33","hashOfConfig":"28"},{"size":1393,"mtime":1665910408609,"results":"34","hashOfConfig":"28"},{"size":387,"mtime":1660889955738,"results":"35","hashOfConfig":"28"},{"size":138,"mtime":1660889955741,"results":"36","hashOfConfig":"28"},{"size":100,"mtime":1660889955742,"results":"37","hashOfConfig":"28"},{"size":185,"mtime":1665896078020,"results":"38","hashOfConfig":"28"},{"size":739,"mtime":1665908639493,"results":"39","hashOfConfig":"28"},{"size":199,"mtime":1665911248591,"results":"40","hashOfConfig":"28"},{"size":517,"mtime":1660889955741,"results":"41","hashOfConfig":"42"},{"size":2608,"mtime":1666268732376,"results":"43","hashOfConfig":"42"},{"size":375,"mtime":1660889955742,"results":"44","hashOfConfig":"42"},{"size":904,"mtime":1666114553792,"results":"45","hashOfConfig":"42"},{"size":5669,"mtime":1666268443283,"results":"46","hashOfConfig":"42"},{"size":1393,"mtime":1665910408609,"results":"47","hashOfConfig":"42"},{"size":846,"mtime":1665910509478,"results":"48","hashOfConfig":"42"},{"size":387,"mtime":1660889955738,"results":"49","hashOfConfig":"42"},{"size":739,"mtime":1665908639493,"results":"50","hashOfConfig":"42"},{"size":185,"mtime":1665896078020,"results":"51","hashOfConfig":"42"},{"size":199,"mtime":1665911248591,"results":"52","hashOfConfig":"42"},{"size":138,"mtime":1666090190454,"results":"53","hashOfConfig":"42"},{"size":100,"mtime":1660889955742,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1btnleu",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1i03p2r",{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"85"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\index.js",[],["114","115"],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\App.js",["116"],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Navbar.js",["117"],"import React, { useState, useEffect } from \"react\";\r\nimport netflixLogo from \"./netflixLogo.png\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n   \r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`navbar ${show && \"navbar__black\"}`}>\r\n \r\n    <div className={'logo_name'}>Alistair's</div> \r\n     <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix\"\r\n        className=\"Navbar__logo\"\r\n      />\r\n      <img src={netflixLogo} className=\"Navbar__avatar\" alt=\"profile image\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Row.js",["118","119","120","121"],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Request.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Banner.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\Footer.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\axios.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\utils.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\LoaderQuotes\\LoaderQoutes.js",[],"C:\\Users\\alistair\\Desktop\\git personal\\Netflix-clone\\src\\components\\Loader\\SecondaryLoader.js",[],"H:\\ent\\src\\index.js",[],["122","123"],"H:\\ent\\src\\App.js",["124","125"],"import \"./App.css\";\r\nimport Row from \"./Row\";\r\nimport requests from \"./Request\";\r\nimport Banner from \"./Banner\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport LoaderQoutes from \"./components/LoaderQuotes/LoaderQoutes\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SecondaryLoader from \"./components/Loader/SecondaryLoader\";\r\nimport axios from \"axios\";\r\n//  2 19\r\nfunction App() {\r\n  const random = Math.floor(Math.random() * 2) + \"\";\r\n  const [loading, setLoading] = useState(random);\r\n  const [moviePath, setMoviePath] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 12000);\r\n    setLoading(random);\r\n    getMovies();\r\n    return () => {};\r\n  }, []);\r\n  const getMovies = async () => {\r\n    const resp = await axios.get(\"http://localhost:3005/api/movies/\");\r\n    console.log(resp, \"est321t23\");\r\n    setMoviePath(resp.data.videos);\r\n    // setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar />\r\n      <div className=\"main-body\">\r\n        {loading ? (\r\n          <div className=\"loader-body d-flex flex-column justify-content-center align-items-center\">\r\n            <LoaderQoutes />\r\n            {loading == \"0\" ? <Loader /> : <SecondaryLoader />}\r\n            {/* */}\r\n            {/* <SecondaryLoader /> */}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Banner />\r\n            <Row\r\n              title={\"Netflix Original\"}\r\n              fetchUrl={requests.fetchNetflixOriginals}\r\n              isLargeRow\r\n            />\r\n            <Row title={\"Trending Now\"} fetchUrl={requests.fetchTrending} />\r\n            <Row title={\"Top Rated\"} fetchUrl={requests.fetchTopRated} />\r\n            <Row title={\"Action Shows\"} fetchUrl={requests.fetchActionMovies} />\r\n            <Row\r\n              title={\"Comedy Movies\"}\r\n              fetchUrl={requests.fetchComedyMovies}\r\n            />\r\n            <Row\r\n              title={\"Available Movies\"}\r\n              // fetchUrl={'movies'}\r\n              fetchLocal={moviePath}\r\n              isLargeRow\r\n            />\r\n            <Row title={\"Horror Shows\"} fetchUrl={requests.fetchHorrorMovies} />\r\n            <Row\r\n              title={\"Romance Movies\"}\r\n              fetchUrl={requests.fetchRomanceMovies}\r\n            />\r\n            <Row\r\n              title={\"Documentaries\"}\r\n              fetchUrl={requests.fetchDocumentaries}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","H:\\ent\\src\\reportWebVitals.js",[],"H:\\ent\\src\\Navbar.js",["126"],"import React, { useState, useEffect } from \"react\";\r\nimport netflixLogo from \"./netflixLogo.png\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n   \r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`navbar ${show && \"navbar__black\"}`}>\r\n  <div>\r\n\r\n    <div className={'logo_name'}>Alistair's</div> \r\n     <img\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix\"\r\n        className=\"Navbar__logo\"\r\n        />\r\n        </div>\r\n      <img src={netflixLogo} className=\"Navbar__avatar\" alt=\"profile image\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","H:\\ent\\src\\Row.js",["127","128"],"import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport ReactPlayer from \"react-player\";\r\n// import localMovies, { fileStrucuter } from \"./personal\";\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n// let vid32 = URL.createObjectURL(\"\");\r\nfunction Row({ title, fetchUrl, fetchLocal, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [showMovie, setShowMovie] = useState(false);\r\n  const [showCurrentVideo, setShowCurrentVideo] = useState(false);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [stretch, setStretch] = useState(false);\r\n  console.log(showCurrentVideo, \"ghah\");\r\n  const onKeyDown = (e) => {\r\n    console.log(e.which, \"tes323\");\r\n    if (e.which === 90) {\r\n      setStretch(true);\r\n    }\r\n    if (e.which === 88) {\r\n      setStretch(false);\r\n    }\r\n  };\r\n\r\n  // fileStrucuter()\r\n  useEffect(() => {\r\n    if (fetchUrl) {\r\n      async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n\r\n        setMovies(request.data.results);\r\n        return request;\r\n      }\r\n      fetchData();\r\n    }\r\n    document.addEventListener(\"keydown\", onKeyDown);\r\n\r\n    return () => {\r\n      document.addEventListener(\"keydown\", onKeyDown);\r\n    };\r\n    // if array empty run once only when row loads.\r\n  }, [fetchUrl]);\r\n  // something new to get array in data format\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleOnclick = (movie) => {\r\n    console.table(movie);\r\n    if (movie.videoUrl) {\r\n      setShowMovie(movie.videoUrl);\r\n      setTrailerUrl(\"\");\r\n    }\r\n    // if (movie.id === 113988) {\r\n    //   setShowMovie(true);\r\n    //   return \"\";\r\n    // }\r\n    if (trailerUrl != \"\") {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.title || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n          setShowMovie(false);\r\n          //console.log(urlParams.get(\"v\"))\r\n        })\r\n        .catch((error) => console.log(\"nnnnnnnn\", error));\r\n    }\r\n  };\r\n  // const handleClick = (movie) => {\r\n  //   // console.table(movie?.title)\r\n  //   if (trailerUrl != \"\") setTrailerUrl(\"\");\r\n  //    else {\r\n  //     movieTrailer(movie?.name || movie?.title)\r\n  //     .then(ur => {\r\n  //       const urlParams = new URLSearchParams(new URL(ur).search);\r\n  //       setTrailerUrl(urlParams.get(\"v\"));\r\n  //     })\r\n  //     .catch(err => console.log(err));\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {fetchLocal &&\r\n          Object.keys(fetchLocal).map((key) => {\r\n            let data = fetchLocal[key];\r\n            return (\r\n              <div\r\n                onClick={() => {\r\n                  setShowMovie(data);\r\n                  setShowCurrentVideo(\"personal\" + data[0].path);\r\n                }}\r\n                key={data.name}\r\n                className={`row__poster ${\r\n                  isLargeRow && \"row__posterLarge\"\r\n                } local-video`}\r\n                src={\r\n                  `${baseUrl}${data.name}`\r\n                  // data.id === 113988\r\n                  //   ? \"https://cdn.bollywoodmdb.com/fit-in/movies/largethumb/2022/hit-the-first-case/hit-the-first-case-poster-4.jpg\"\r\n                  //   :\r\n                }\r\n                alt={data.name}\r\n              >\r\n                {data[0].name}\r\n              </div>\r\n            );\r\n          })}\r\n        {movies &&\r\n          movies.map((data) => (\r\n            <img\r\n              onClick={() => {\r\n                handleOnclick(data);\r\n              }}\r\n              key={data.id}\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n              src={\r\n                data.image\r\n                  ? data.image\r\n                  : `${baseUrl}${\r\n                      isLargeRow ? data.poster_path : data.backdrop_path\r\n                    }`\r\n                // data.id === 113988\r\n                //   ? \"https://cdn.bollywoodmdb.com/fit-in/movies/largethumb/2022/hit-the-first-case/hit-the-first-case-poster-4.jpg\"\r\n                //   :\r\n              }\r\n              alt={data.name}\r\n            />\r\n          ))}\r\n      </div>\r\n      {showMovie && (\r\n        <div className={!stretch ? \"wrapper-video\" : \"test\"}>\r\n          <button onClick={() => setStretch(!stretch)}>Zoom</button>\r\n          {showMovie.length > 1\r\n            ? showMovie.map((data, i) => {\r\n                return (\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowCurrentVideo(\"personal\" + data.path);\r\n                    }}\r\n                  >\r\n                    Episode {i + 1}\r\n                  </button>\r\n                );\r\n              })\r\n            : null}\r\n          <ReactPlayer\r\n            url={showCurrentVideo}\r\n            // url={\r\n            //   `personal\\shows\\American.Playboy.The.Hugh.Hefner.Story.S01.720p.WEBRip\\American.Playboy.The.Hugh.Hefner.Story.S01E01.720p.WEBRip.HEVC.2CH.x265.mk`\r\n            // }\r\n            className={!stretch ? \"react-player\" : \"test\"}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            // playIcon={<button>Play</button>}\r\n            // light={true}\r\n            controls={true}\r\n          />\r\n        </div>\r\n      )}\r\n      {trailerUrl != \"\" && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","H:\\ent\\src\\Banner.js",[],"H:\\ent\\src\\Request.js",[],"H:\\ent\\src\\Footer.js",[],"H:\\ent\\src\\components\\LoaderQuotes\\LoaderQoutes.js",[],"H:\\ent\\src\\components\\Loader\\Loader.js",[],"H:\\ent\\src\\components\\Loader\\SecondaryLoader.js",[],"H:\\ent\\src\\axios.js",[],["129","130"],"H:\\ent\\src\\utils.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":31,"column":22,"nodeType":"137","messageId":"138","endLine":31,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":29,"column":7,"nodeType":"141","endLine":29,"endColumn":79},{"ruleId":"142","severity":1,"message":"143","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":31,"column":6,"nodeType":"148","endLine":31,"endColumn":16,"suggestions":"149"},{"ruleId":"135","severity":1,"message":"150","line":52,"column":20,"nodeType":"137","messageId":"138","endLine":52,"endColumn":22},{"ruleId":"135","severity":1,"message":"150","line":111,"column":19,"nodeType":"137","messageId":"138","endLine":111,"endColumn":21},{"ruleId":"131","replacedBy":"151"},{"ruleId":"133","replacedBy":"152"},{"ruleId":"146","severity":1,"message":"153","line":26,"column":6,"nodeType":"148","endLine":26,"endColumn":8,"suggestions":"154"},{"ruleId":"135","severity":1,"message":"136","line":41,"column":22,"nodeType":"137","messageId":"138","endLine":41,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":31,"column":7,"nodeType":"141","endLine":31,"endColumn":79},{"ruleId":"135","severity":1,"message":"150","line":66,"column":20,"nodeType":"137","messageId":"138","endLine":66,"endColumn":22},{"ruleId":"135","severity":1,"message":"150","line":173,"column":19,"nodeType":"137","messageId":"138","endLine":173,"endColumn":21},{"ruleId":"131","replacedBy":"155"},{"ruleId":"133","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'urlVideo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLocal'. Either include it or remove the dependency array.","ArrayExpression",["159"],"Expected '!==' and instead saw '!='.",["157"],["158"],"React Hook useEffect has a missing dependency: 'random'. Either include it or remove the dependency array.",["160"],["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [fetchLocal, fetchUrl]",{"range":"165","text":"166"},"Update the dependencies array to be: [random]",{"range":"167","text":"168"},[996,1006],"[fetchLocal, fetchUrl]",[804,806],"[random]"]